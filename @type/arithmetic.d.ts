export declare function sum<N extends number>(num: N): N;
export declare function sum(num: number, ...numbers: number[]): number;
export declare function addAll<N extends number>(num: N): N;
export declare function addAll(num: number, ...numbers: number[]): number;
export declare function subAll<N extends number>(num: N): N;
export declare function subAll(num: number, ...numbers: number[]): number;
export declare function prod<N extends number>(num: N): N;
export declare function prod(num: number, ...numbers: number[]): number;
export declare function mulAll<N extends number>(num: N): N;
export declare function mulAll(num: number, ...numbers: number[]): number;
export declare function quot<N extends number>(num: N): N;
export declare function quot(num: number, ...numbers: number[]): number;
export declare function divAll<N extends number>(num: N): N;
export declare function divAll(num: number, ...numbers: number[]): number;
export declare function modAll<N extends number>(num: N): N;
export declare function modAll(num: number, ...numbers: number[]): number;
export declare function powAll<N extends number>(num: N): N;
export declare function powAll(num: number, ...numbers: number[]): number;
